!function(){"use strict";var a=window.wp.blocks,r=window.wp.element,o=window.wp.i18n,e=window.wp.blockEditor,t=(window.wp.hooks,window.wp.components,window.lodash);window.wp.data,(0,o.__)("Href","dragblock"),(0,o.__)("Target","dragblock"),(0,o.__)("default","dragblock"),(0,o.__)("New Tab","dragblock"),(0,o.__)("Parent Tab","dragblock"),(0,o.__)("Same Tab","dragblock"),(0,o.__)("Out of Iframe","dragblock"),(0,o.__)("Rel","dragblock"),(0,o.__)("Tab Index","dragblock"),(0,o.__)("Src","dragblock"),(0,o.__)("Alt","dragblock"),(0,o.__)("Name","dragblock"),(0,o.__)("Placeholder","dragblock"),(0,o.__)("Title","dragblock"),(0,o.__)("Type","dragblock"),(0,o.__)("Value","dragblock"),(0,o.__)("Disabled","dragblock"),(0,o.__)("Required","dragblock"),(0,o.__)("Selected","dragblock"),(0,o.__)("Action","dragblock"),(0,o.__)("Method","dragblock"),(0,o.__)("For","dragblock"),(0,o.__)("Sizes","dragblock"),(0,o.__)("Loading","dragblock"),(0,o.__)("Loading immediately or wait viewport","dragblock"),(0,o.__)("Default","dragblock"),(0,o.__)("Lazy","dragblock"),(0,o.__)("Eager","dragblock"),wp.hooks.addFilter("blocks.registerBlockType","dragblock/attributes-register",(function(a,r){return a=Object.assign({},a,{attributes:Object.assign({},a.attributes,{dragBlockClientId:{type:"string"},anchor:{type:"string",source:"attribute",default:"",attribute:"id",selector:"*"},className:{type:"string",default:""},dragBlockAttrs:{type:"array",default:""}})}),-1!==r.indexOf("dragblock")&&(a=Object.assign({},a,{attributes:Object.assign({},a.attributes,{}),supports:Object.assign({},a.supports,{anchor:!0})})),a})),(0,o.__)("Home URL","dragblock"),(0,o.__)("Home URL","dragblock"),(0,o.__)("Latest Post URL","dragblock"),(0,o.__)("Blog URL with Latest Posts","dragblock"),(0,o.__)("Login URL","dragblock"),(0,o.__)("Login URL","dragblock"),(0,o.__)("Form Submission Error Message","dragblock"),(0,o.__)("Error message after submitting form","dragblock"),(0,o.__)("DragBlock Form Error: There is an uknown server error.","dragblock"),(0,o.__)("Post Title","dragblock"),(0,o.__)("The parsed post's Title","dragblock"),(0,o.__)("The DragBlock Post Title","dragblock"),(0,o.__)("Post URL","dragblock"),(0,o.__)("The parsed post's url","dragblock"),(0,o.__)("Post Image Thumbnail SRC","dragblock"),(0,o.__)("the parsed post's image src","dragblock"),(0,o.__)("Post Author URL","dragblock"),(0,o.__)("the parsed post's author page url","dragblock"),(0,o.__)("Post Author Name","dragblock"),(0,o.__)("The parsed post's author name","dragblock"),(0,o.__)("Author Name","dragblock"),(0,o.__)("Post Author Avatar SRC","dragblock"),(0,o.__)("The parsed post's author's avatar SRC","dragblock"),(0,o.__)("Post Author Bio","dragblock"),(0,o.__)("The parsed post's author's biography/description","dragblock"),(0,o.__)("Post Date Name","dragblock"),(0,o.__)("The parsed post's date","dragblock"),(0,o.__)("July 01, 2086","dragblock"),(0,o.__)("Post Comment Number","dragblock"),(0,o.__)("The parsed post's comment number","dragblock"),(0,o.__)("Post Snippet","dragblock"),(0,o.__)("The parsed post's snippet","dragblock"),(0,o.__)("Get the first paragraph of the post content. If the post excerpt, a custom summary of the post that author manually inputted when composing the post content, exists, use that instead","dragblock"),(0,o.__)("Post Category Name","dragblock"),(0,o.__)("Category Name","dragblock"),(0,o.__)("Post Category URL","dragblock"),(0,o.__)("Post Tag Name","dragblock"),(0,o.__)("Tag Name","dragblock"),(0,o.__)("Post Tag URL","dragblock"),(0,o.__)("Twitter Share URL","dragblock"),(0,o.__)("Facebook Share URL","dragblock"),(0,o.__)("Whatsapp Share URL","dragblock"),(0,o.__)("Telegram Share URL","dragblock"),(0,o.__)("Tumblr Share URL","dragblock"),(0,o.__)("Reddit Share URL","dragblock"),(0,o.__)("LinkedIn Share URL","dragblock"),(0,o.__)("Gmail Share URL","dragblock"),(0,o.__)("Navigator Share URL","dragblock");var _=JSON.parse('{"u2":"dragblock/input"}');(0,a.registerBlockType)(_.u2,{edit:function(a){const{attributes:o,setAttributes:_,isSelected:l,clientId:s}=a;let{dragBlockAttrs:d,dragBlockClientId:c}=o;if(!d){const a=[{slug:"name",value:c||s},{slug:"type",value:"text"},{slug:"placeholder",value:"Input a text",locale:"en_US"}];_({dragBlockAttrs:(0,t.cloneDeep)(a)}),d=a}let g=(0,e.useBlockProps)();return(0,r.createElement)("input",{...g,onChange:()=>{}})},save:function(a){const{attributes:o}=a;let t=e.useBlockProps.save();return(0,r.createElement)("input",{...t})}})}();